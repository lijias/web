面向对象
面向对象的三大特征
封装、继承、多态
多态
一、概念
    在有继承关系的类中，通过对相同的成员方法的调用。返回不同的结    果。多态：同名异式。

二、多态的语法
    1、抽象类和抽象成员方法
       抽象成员方法：
        定义抽象成员方法时，前面要求加上关键词abstract.
        抽象方法没有方法体。
       抽象类
        定义抽象类，在类的声明前加上关键词abstract.
       若一个类中有抽象方法，则这个类必须也是抽象类。
       在一个抽象类中可以没有抽象方法，可以有普通的成员属性和成员方法。
       抽象类用途是用来定义规范。
       抽象类不能够被实例化。
       若抽象类中有抽象的成员方法，则在继承时必须被重载。

    2、接口
       接口的声明
       interface 接口名称{
       }
       在接口中不能有普通的成员方法和成员属性。仅能有常量和抽象方法。
       抽象方法：
       必须不出现关键词abstract.
      
       接口不能够被实例化。接口是用来定义规范。

       接口的继承。
       接口与接口之间的继承：extends
       类对于接口的继承：
       class 类名称 extends 父类名称 implements 接口[,接口]
       若接口中有抽象的成员方法，则在子类中必须重载接口中抽象的成员方法。